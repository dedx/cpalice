Jobtag = {
   "comment:Automatically generated analysis JDL"
};
# Input xml collections
InputDataCollection = {
   "LF:/alice/cern.ch/user/p/psteffan/example_task/$1,nodownload"
};
# Output directory
OutputDir = "/alice/cern.ch/user/p/psteffan//example_task/out/$2/#alien_counter_03i#";
# List of requested packages
Packages = {
   "VO_ALICE@AliRoot::v5-08-01-1",
   "VO_ALICE@ROOT::v5-34-30-alice-12",
   "VO_ALICE@APISCONFIG::V1.1x"
};
# List of input files to be uploaded to workers
InputFile = {
   "LF:/alice/cern.ch/user/p/psteffan/example_task/example_task.C",
   "LF:/alice/cern.ch/user/p/psteffan/example_task/example_task.root",
   "LF:/alice/cern.ch/user/p/psteffan/example_task/AliAnalysisTaskElectronTagging.h",
   "LF:/alice/cern.ch/user/p/psteffan/example_task/AliAnalysisTaskElectronTagging.cxx"
};
# This is the startup script
Executable = "/alice/cern.ch/user/p/psteffan/example_task/example_task.sh";
# We split per SE or file
Split = "se";
# Time after which the job is killed (500 min.)
TTL = "30000";
# Resubmit failed jobs until DONE rate reaches this percentage
MasterResubmitThreshold = "90%";
# Maximum number of input files to be processed per subjob
SplitMaxInputFileNumber = "100";
# Format of input data
InputDataListFormat = "xml-single";
# Collection name to be processed on each worker node
InputDataList = "wn.xml";
# List of output files and archives
Output = {
   "log_archive.zip:std*@disk=1",
   "root_archive.zip:phistos.root,*.stat@disk=2"
};
# AliEn price for this job
Price = "1";
# Validation script to be run for each subjob
Validationcommand = "/alice/cern.ch/user/p/psteffan/example_task/example_task_validation.sh";

# JDL variables
JDLVariables = 
{
   "Packages",
   "OutputDir"
};
Workdirectorysize = {"5000MB"};
